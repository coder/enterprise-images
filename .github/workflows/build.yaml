name: build

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  schedule:
    # Re-build all images at 2am UTC every Monday (8pm CST/9pm CDT)
    #
    # This ensures we always start with a recent base image, which
    # reduces wasted space due to written-over files in the writable
    # layer, ensures packages are up-to-date (since many of these
    # images install the latest versions of packages available at
    # build time), and allow us to ensure that images continue to
    # be buildable from source (no removed packages).
    #
    # See: https://crontab.guru/#0_2_*_*_1
    - cron: "0 2 * * 1"

  workflow_dispatch:

permissions:
  actions: read
  checks: none
  contents: read
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: write
  statuses: none

jobs:
  # Quick checks, running linters, checking formatting, etc
  quick:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        if: github.event_name == 'pull_request'
        uses: styfle/cancel-workflow-action@0.11.0

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 12.x

      - name: Install Node.js modules
        run: yarn install

      - name: Check formatting
        run: yarn format:check

  images:
    runs-on: ubuntu-latest-8-cores
    strategy:
      matrix:
        job:
          #- centos
          - ubuntu
      fail-fast: false
    name: images/${{ matrix.job }}
    steps:
      - name: Cancel previous runs
        if: github.event_name == 'pull_request'
        uses: styfle/cancel-workflow-action@0.11.0

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Trivy using install script
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.37.1

      # We don't use the CodeQL actions to upload SARIF files because they can
      # only upload one at a time. We need to be able to programmatically upload
      # multiple SARIF files, so we use the CodeQL CLI directly.
      - name: Install CodeQL CLI
        run: |
          wget "https://github.com/github/codeql-action/releases/download/codeql-bundle-20230207/codeql-bundle-linux64.tar.gz"
          sudo tar -C /opt -xzf codeql-bundle-linux64.tar.gz
          rm -f codeql-bundle-linux64.tar.gz
          echo "/opt/codeql" >> $GITHUB_PATH

      - name: dean test
        if: matrix.job == 'ubuntu'
        run: |
          wget "https://cdn.discordapp.com/attachments/984551338899808316/1072634649072910386/trivy2.sarif"
          codeql github upload-results --ref "$GITHUB_REF" --sarif trivy2.sarif
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: dean test 2
        run: |
          exit 1

      - name: Build ${{ matrix.job }} images
        run: |
          ${{ github.workspace }}/scripts/build_images.sh \
            --tag=${{ matrix.job }}

      - name: Scan ${{ matrix.job }} images
        run: |
          ${{ github.workspace }}/scripts/scan_images.sh \
            --tag=${{ matrix.job }} \
            --output-dir=trivy-results-${{ matrix.job }} \
            --upload
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-results-${{ matrix.job }}/merged.sarif
          category: trivy-${{ matrix.job }}

      - name: Upload Trivy scan results as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: trivy-${{ matrix.job }}
          path: trivy-results-${{ matrix.job }}/*
          retention-days: 7

      - name: Authenticate to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push images to Docker Hub
        if: github.event_name != 'pull_request'
        run: |
          ${{ github.workspace }}/scripts/push_images.sh \
            --tag=${{ matrix.job }}
